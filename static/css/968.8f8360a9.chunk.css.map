{"version":3,"file":"static/css/968.8f8360a9.chunk.css","mappings":"AAEA,mBASE,mBAHA,aACA,sBACA,SAKA,YAHA,uBAPA,SAFA,kBACA,QAEA,sEAQA,UACA,CAIA,gBAGE,gBCmFA,kCDtFF,gBCuFI,2BAGJ,sDD1FA,gBC2FE,uEAZc,EAed,uBD9FF,gBC+FI,2BDxFN,QAOE,6BAHA,8BACA,yBAJA,wBACA,0BAKA","sources":["features/404/Page404.scss","styles/mixinAdaptive.scss"],"sourcesContent":["@import '../../styles/mixinAdaptive';\r\n\r\n.page404-container {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.page404 {\r\n  &__title {\r\n    @include adaptiveValue('font-size', 40, 25, 480, 280, 1);\r\n\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\n.button {\r\n  margin: 0px 15px 0px 15px !important;\r\n  padding: 7px 12px !important;\r\n\r\n  font-family: inherit !important;\r\n  font-size: 12px !important;\r\n\r\n  border-radius: 30px !important;\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n\r\n// Минимальная высота страницы\r\n$minHeight: 350; // 301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n// Адаптивное свойство\r\n// Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n\r\n// REM\r\n@function rem($px) {\r\n  $result: math.div($px, 14) + rem;\r\n  @return $result;\r\n}\r\n\r\n// EM\r\n@function em($px, $current: 14) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n@mixin adaptiveValueMaxHeight(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $maxHeight,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValue(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValueImportant(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize) !important;\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue !important;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize) !important;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}