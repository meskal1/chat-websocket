{"version":3,"file":"static/css/308.4fe0367d.chunk.css","mappings":"AAEA,iBAME,kBAQA,mBACA,mBAXA,aACA,sBAIA,gBANA,gBAOA,YATA,kBAWA,kBAJA,UAOA,CAEA,wBAeE,kFAFA,iFAZA,WAUA,YALA,UAIA,gBAPA,kBAEA,SAEA,oEAEA,WALA,SAWA,CAIJ,aAGE,eACA,gBC+DE,kCDnEJ,aCoEM,+BAGJ,iEDvEF,aCwEI,qFAZc,EAed,kCD3EJ,aC4EM,8BDrEN,eASE,mBACA,mBAJA,aACA,sBAHA,UADA,SAOA,CCkDE,kCD5DJ,eC6DM,yBAGJ,iEDhEF,eCiEI,+EAZc,EAed,kCDpEJ,eCqEM,yBDxDN,YACE,aACA,sBACA,aAEF,2BACE,GACE,sDAGF,GACE,yDANJ,mBACE,GACE,sDAGF,GACE,yDAIJ,mBACE,aACA,6BAEA,gBAGF,kCASE,mBACA,6GARA,eAIA,eACA,gBAHA,iBASA,eAGF,gBAGE,mBAFA,UAEA,CAEA,sBACE,mBAIJ,kBAGE,gBAFA,UAEA,CAEA,wBACE,mBEhHJ,eACE,kBAEA,WAEA,4BAOE,aAIA,UADA,cACA,CAGF,wDANE,OAPA,oBAKA,kBAFA,yCAwBA,CAdF,4BAYE,WAFA,mBAIA,eAPA,SAOA,CAGF,6CAIE,WADA,eAFA,+DAGA,CAGF,sBASE,mBAEA,yCAEA,gBANA,WADA,eAMA,aARA,qBAHA,kBAcA,eAZA,UAYA,CAEA,yCAIE,WADA,eAFA,+DAGA","sources":["features/auth/Login/Login.scss","styles/mixinAdaptive.scss","components/Input/Input.scss"],"sourcesContent":["@import '../../../styles/mixinAdaptive';\r\n\r\n.login-container {\r\n  position: relative;\r\n\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: center;\r\n\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 2px;\r\n\r\n  text-align: center;\r\n\r\n  background: #17212b;\r\n  border-radius: 20px;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: -50%;\r\n    left: -50%;\r\n    transform-origin: bottom right;\r\n\r\n    width: 100%;\r\n    max-width: 400px;\r\n    height: 100%;\r\n\r\n    background: linear-gradient(0deg, transparent, transparent, #45f3ff, #45f3ff, #45f3ff);\r\n\r\n    animation: animate 6s linear infinite;\r\n  }\r\n}\r\n\r\n.login-title {\r\n  @include adaptiveValue('margin-bottom', 15, 5, 430, 300, 1);\r\n\r\n  font-size: 26px;\r\n  font-weight: 600;\r\n}\r\n\r\n.login-content {\r\n  @include adaptiveValue('padding', 30, 20, 430, 300, 1);\r\n\r\n  z-index: 2;\r\n  inset: 4px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  background: #182533;\r\n  border-radius: 20px;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 20px;\r\n}\r\n@keyframes animate {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.buttons-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  margin: 15px 0px 0px 0px;\r\n}\r\n\r\n.primary-button,\r\n.secondary-button {\r\n  cursor: pointer;\r\n\r\n  padding: 8px 20px;\r\n\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n\r\n  border-radius: 30px;\r\n  box-shadow: rgb(255 255 255 / 20%) 0px 3px 1px -2px, rgb(255 255 255 / 14%) 0px 2px 2px 0px,\r\n    rgb(255 255 255 / 12%) 0px 1px 5px 0px;\r\n\r\n  transition: 0.2s;\r\n}\r\n\r\n.primary-button {\r\n  color: black;\r\n\r\n  background: #45f3ff;\r\n\r\n  &:hover {\r\n    background: #31b4bd;\r\n  }\r\n}\r\n\r\n.secondary-button {\r\n  color: black;\r\n\r\n  background: white;\r\n\r\n  &:hover {\r\n    background: rgb(202 202 202);\r\n  }\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n\r\n// Минимальная высота страницы\r\n$minHeight: 350; // 301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n// Адаптивное свойство\r\n// Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n\r\n// REM\r\n@function rem($px) {\r\n  $result: math.div($px, 14) + rem;\r\n  @return $result;\r\n}\r\n\r\n// EM\r\n@function em($px, $current: 14) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n@mixin adaptiveValueMaxHeight(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $maxHeight,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValue(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValueImportant(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize) !important;\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue !important;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize) !important;\r\n    }\r\n  }\r\n}\r\n",".input-content {\r\n  position: relative;\r\n\r\n  width: 100%;\r\n\r\n  .error-input {\r\n    pointer-events: none;\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n\r\n    position: absolute;\r\n    bottom: -12px;\r\n    left: 0;\r\n\r\n    font-size: 10px;\r\n    color: red;\r\n  }\r\n\r\n  .placeholder {\r\n    pointer-events: none;\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n\r\n    position: absolute;\r\n    z-index: 1;\r\n    left: 0;\r\n\r\n    padding: 16px 5px 0px;\r\n\r\n    color: grey;\r\n\r\n    transition: 0.2s;\r\n  }\r\n\r\n  .input-not-empty ~ .placeholder {\r\n    transform: translateY(-16px);\r\n\r\n    font-size: 10px;\r\n    color: white;\r\n  }\r\n\r\n  .input {\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    padding: 16px 5px 4px;\r\n\r\n    font-size: 16px;\r\n    color: white;\r\n\r\n    background: #182533;\r\n    border: none;\r\n    border-bottom: 1px solid grey;\r\n    outline: none;\r\n    box-shadow: none;\r\n\r\n    transition: 0.2s;\r\n\r\n    &:focus ~ .placeholder {\r\n      transform: translateY(-16px);\r\n\r\n      font-size: 10px;\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}